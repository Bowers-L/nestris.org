services:
  client:
    image: anselchang1/nestris.org:client-dev
    build:
      context: .
      dockerfile: Dockerfile.client-dev  # New Dockerfile for development
    environment:
      - NODE_ENV=dev
    ports:
      - "80:4200"  # Map host port 80 to container port 4200 (default Angular dev server port)
    depends_on:
      - server
    volumes:
      - ./client:/app  # Mount the client directory for live reloading
      - /app/node_modules  # Use container's node_modules
    command: ng serve --host 0.0.0.0 --port 4200 --poll 500

  server:
    image: anselchang1/nestris.org:server
    build:
      context: .
      dockerfile: Dockerfile.server
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - NODE_ENV=dev
    ports:
      - "9229:9229"  # Node.js debugger port
      - "3000:3000" # Expose port 3000 for dev server
    depends_on:
      - postgres
    command: node --inspect=0.0.0.0:9229 -r ts-node/register index.ts

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./wipe-and-reset-database.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "6543:5432" # Expose port 6543 for dev postgres
      
volumes:
  postgres-data:
