services:
  client:
    image: anselchang1/nestris.org:client-production
    build:
      context: .
      dockerfile: Dockerfile.client-prod
    environment:
      - NODE_ENV=production
    ports:
      - "80:80"  # Expose port 80 for production client
      - "443:443"  # Expose port 443 for production client
    depends_on:
      - server  # Ensure client waits for server to be ready
    command: >
      sh -c "nginx -g 'daemon off;';"
    volumes:
      - ./certs:/etc/ssl/certs

  server:
    image: anselchang1/nestris.org:server-production
    build:
      context: .
      dockerfile: Dockerfile.server
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - NODE_ENV=production
    ports:
      - "3000:3000" # Expose port 3000 for production server
      - "9229:9229"  # Node.js debugger port
    depends_on:
      - postgres
    command: node --inspect=0.0.0.0:9229 -r ts-node/register index.ts

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./wipe-and-reset-database.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "7654:5432"

volumes:
  postgres-data:
