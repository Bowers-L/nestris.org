services:
  client:
    image: anselchang1/nestris.org:client-staging
    build:
      context: .
      dockerfile: Dockerfile.client
    environment:
      - NODE_ENV=staging
    ports:
      - "81:80"  # Expose port 81 for staging client
    depends_on:
      - server  # Ensure client waits for server to be ready
    command: >
      sh -c "nginx -g 'daemon off;';"

  server:
    image: anselchang1/nestris.org:server-staging
    build:
      context: .
      dockerfile: Dockerfile.server
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - NODE_ENV=staging
    ports:
      - "3001:3000" # Expose port 3001 for staging server
      - "9230:9229"  # Node.js debugger port
    depends_on:
      - postgres
      - cpp-service
    command: node --inspect=0.0.0.0:9229 -r ts-node/register index.ts

  cpp-service:
    image: anselchang1/nestris.org:cpp-staging
    build:
      context: .
      dockerfile: Dockerfile.cpp
    expose:
      - "4500"
    ports:
      - "4501:4500"

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./wipe-and-reset-database.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "6543:5432"
      
volumes:
  postgres-data:
