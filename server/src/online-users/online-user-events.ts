import { OnlineUserActivityType } from "../../shared/models/activity";
import { JsonMessage } from "../../shared/network/json-message";
import { PacketDisassembler } from "../../shared/network/stream-packets/packet-disassembler";

/**
 * Represents events that are generated by OnlineUserManager and can be subscribed to by other parts of the server
 */

export enum OnlineUserEventType {
    ON_USER_CONNECT = "ON_USER_CONNECT",
    ON_USER_DISCONNECT = "ON_USER_DISCONNECT",
    ON_USER_ACTIVITY_CHANGE = "ON_USER_ACTIVITY_CHANGE",
    ON_SESSION_CONNECT = "ON_SESSION_CONNECT",
    ON_SESSION_DISCONNECT = "ON_SESSION_DISCONNECT",
    ON_SESSION_JSON_MESSAGE = "ON_SESSION_JSON_MESSAGE",
    ON_SESSION_BINARY_MESSAGE = "ON_SESSION_BINARY_MESSAGE",
}

export abstract class OnlineUserEvent {
    abstract readonly type: OnlineUserEventType;
}

export abstract class UserEvent {
    constructor(
        public readonly userid: string,
        public readonly username: string
    ) {}
}

export class OnUserConnectEvent implements OnlineUserEvent {
    readonly type = OnlineUserEventType.ON_USER_CONNECT;
    constructor(
        public readonly userid: string,
        public readonly username: string
    ) {}
}

export class OnUserDisconnectEvent implements OnlineUserEvent {
    readonly type = OnlineUserEventType.ON_USER_DISCONNECT;
    constructor(
        public readonly userid: string,
        public readonly username: string
    ) {}
}

export class OnUserActivityChangeEvent implements OnlineUserEvent {
    readonly type = OnlineUserEventType.ON_USER_ACTIVITY_CHANGE;
    constructor(
        public readonly userid: string,
        public readonly username: string,
        public readonly activity: OnlineUserActivityType | null
    ) {}
}

export class OnSessionConnectEvent implements OnlineUserEvent {
    readonly type = OnlineUserEventType.ON_SESSION_CONNECT;
    constructor(
        public readonly userid: string,
        public readonly username: string,
        public readonly sessionID: string
    ) {}
}

export class OnSessionDisconnectEvent implements OnlineUserEvent {
    readonly type = OnlineUserEventType.ON_SESSION_DISCONNECT;
    constructor(
        public readonly userid: string,
        public readonly username: string,
        public readonly sessionID: string
    ) {}
}

export class OnSessionJsonMessageEvent implements OnlineUserEvent {
    readonly type = OnlineUserEventType.ON_SESSION_JSON_MESSAGE;
    constructor(
        public readonly userid: string,
        public readonly username: string,
        public readonly sessionID: string,
        public readonly message: JsonMessage
    ) {}
}

export class OnSessionBinaryMessageEvent implements OnlineUserEvent {
    readonly type = OnlineUserEventType.ON_SESSION_BINARY_MESSAGE;
    constructor(
        public readonly userid: string,
        public readonly username: string,
        public readonly sessionID: string,
        public readonly message: PacketDisassembler
    ) {}
}